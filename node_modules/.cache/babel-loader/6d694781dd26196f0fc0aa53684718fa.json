{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\adminlte_react\\\\src\\\\Home\\\\pages\\\\DataReact.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport ExportToExcel from \"./ExportToExcel\";\nexport default class DataReact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    const url = \"http://jsonplaceholder.typicode.com/posts\";\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(posts => {\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  deleteRow(id) {\n    console.log(id);\n  }\n\n  render() {\n    const columns = [{\n      Header: \"User ID\",\n      accessor: \"userId\",\n      filterable: false,\n      width: 100,\n      maxWidth: 100,\n      minWidth: 100\n    }, {\n      Header: \"ID\",\n      //accessor: \"id\",\n      width: 100,\n      maxWidth: 100,\n      minWidth: 100,\n      accessor: el => el.id + el.title,\n      filterMethod: (filter, row) => {\n        const escapedStr = filter.value.toLowerCase();\n        const termsArr = escapedStr.split(\" \");\n        const finalRegexStr = termsArr.reduce((acc, curr, idx) => acc + \"(?=.*\" + curr + \")\", \"\");\n        const regex = new RegExp(finalRegexStr);\n        return regex.test(row[filter.id]);\n      },\n      Cell: props => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, props.original.id, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), \" \", props.original.title)\n    }, {\n      Header: \"Title\",\n      accessor: \"title\"\n    }, {\n      Header: \"Content\",\n      accessor: \"body\",\n      sortable: false\n    }, {\n      Header: \"Action\",\n      Cell: props => {\n        return React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            this.deleteRow(props.original.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Delete\");\n      },\n      sortable: false,\n      filterable: false,\n      width: 100,\n      maxWidth: 100,\n      minWidth: 100\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"box-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Data Table With React\")), React.createElement(\"div\", {\n      className: \"box-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      columns: columns,\n      data: this.state.posts,\n      filterable: true,\n      defaultPageSize: 5,\n      noDataText: \"Please Wait\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, (state, filtredData, instance) => {\n      this.reactTable = state.pageRows.map(post => {\n        return post._original;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, filtredData(), React.createElement(ExportToExcel, {\n        posts: this.reactTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\react\\adminlte_react\\src\\Home\\pages\\DataReact.js"],"names":["React","Component","ReactTable","ExportToExcel","DataReact","constructor","props","state","posts","componentDidMount","url","fetch","method","then","response","json","setState","deleteRow","id","console","log","render","columns","Header","accessor","filterable","width","maxWidth","minWidth","el","title","filterMethod","filter","row","escapedStr","value","toLowerCase","termsArr","split","finalRegexStr","reduce","acc","curr","idx","regex","RegExp","test","Cell","original","sortable","filtredData","instance","reactTable","pageRows","map","post","_original"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport ExportToExcel from \"./ExportToExcel\";\r\nexport default class DataReact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const url = \"http://jsonplaceholder.typicode.com/posts\";\r\n    fetch(url, { method: \"GET\" })\r\n      .then(response => response.json())\r\n      .then(posts => {\r\n        this.setState({ posts: posts });\r\n      });\r\n  }\r\n  deleteRow(id) {\r\n    console.log(id);\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        Header: \"User ID\",\r\n        accessor: \"userId\",\r\n        filterable: false,\r\n        width: 100,\r\n        maxWidth: 100,\r\n        minWidth: 100\r\n      },\r\n      {\r\n        Header: \"ID\",\r\n        //accessor: \"id\",\r\n        width: 100,\r\n        maxWidth: 100,\r\n        minWidth: 100,\r\n        accessor: el => el.id + el.title,\r\n        filterMethod: (filter, row) => {\r\n          const escapedStr = filter.value.toLowerCase();\r\n          const termsArr = escapedStr.split(\" \");\r\n          const finalRegexStr = termsArr.reduce(\r\n            (acc, curr, idx) => acc + \"(?=.*\" + curr + \")\",\r\n            \"\"\r\n          );\r\n          const regex = new RegExp(finalRegexStr);\r\n          return regex.test(row[filter.id]);\r\n        },\r\n        Cell: props => (\r\n          <span>\r\n            {props.original.id} <br /> {props.original.title}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"title\"\r\n      },\r\n      {\r\n        Header: \"Content\",\r\n        accessor: \"body\",\r\n        sortable: false\r\n      },\r\n      {\r\n        Header: \"Action\",\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                this.deleteRow(props.original.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n        sortable: false,\r\n        filterable: false,\r\n        width: 100,\r\n        maxWidth: 100,\r\n        minWidth: 100\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              {/* /.box */}\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\">Data Table With React</h3>\r\n                </div>\r\n                {/* /.box-header */}\r\n                <div className=\"box-body\">\r\n                  <ReactTable\r\n                    columns={columns}\r\n                    data={this.state.posts}\r\n                    filterable\r\n                    defaultPageSize={5}\r\n                    noDataText={\"Please Wait\"}\r\n                  >\r\n                    {(state, filtredData, instance) => {\r\n                      this.reactTable = state.pageRows.map(post => {\r\n                        return post._original;\r\n                      });\r\n                      return (\r\n                        <div>\r\n                          {filtredData()}\r\n                          <ExportToExcel posts={this.reactTable} />\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  </ReactTable>\r\n                </div>\r\n                {/* /.box-body */}\r\n              </div>\r\n              {/* /.box */}\r\n            </div>\r\n            {/* /.col */}\r\n          </div>\r\n          {/* /.row */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}