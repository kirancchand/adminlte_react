{"ast":null,"code":"var _jsxFileName = \"/home/kiran/Desktop/work/react/adminlte_react/src/Home/Content.js\";\nimport React, { Component } from \"react\";\nimport Data from \"./pages/Data\";\nimport DataReact from \"./pages/DataReact\"; //import Test from \"./pages/Test\";\n\nimport Datachart from \"./pages/Datachart\";\nimport store from \"../Redux/store\";\nimport { Provider } from \"react-redux\";\nexport default class Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkvalue: \"\"\n    };\n    store.subscribe(() => {\n      // When state will be updated(in our case, when items will be fetched), \n      // we will update local component state and force component to rerender \n      // with new data.\n      this.setState({\n        linkvalue: store.getState().linkvalue\n      });\n    });\n  } // componentDidMount(){\n  //   this.setState({linkvalue:this.props.linkvalue});\n  // }\n\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.linkvalue.map(linkvalue => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" \", linkvalue.linkvalue, \" \")), this.props.linkvalue, this.props.linkvalue == \"\" && React.createElement(Datachart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), this.props.linkvalue == \"2\" && React.createElement(Data, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), this.props.linkvalue == \"3\" && React.createElement(DataReact, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/kiran/Desktop/work/react/adminlte_react/src/Home/Content.js"],"names":["React","Component","Data","DataReact","Datachart","store","Provider","Content","constructor","props","state","linkvalue","subscribe","setState","getState","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,eAAe,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC7CO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,SAAS,EAAC;AADD,KAAX;AAGAN,IAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB;AACA;AACA;AAEA,WAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAEN,KAAK,CAACS,QAAN,GAAiBH;AADhB,OAAd;AAGD,KARD;AASD,GAf4C,CAgB7C;AACA;AACA;;;AAGAI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKK,KAAL,CAAWC,SAAX,CAAqBK,GAArB,CAA0BL,SAAD,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKA,SAAS,CAACA,SAAf,MAAxC,CADD,EAEC,KAAKF,KAAL,CAAWE,SAFZ,EAGC,KAAKF,KAAL,CAAWE,SAAX,IAAsB,EAAtB,IAA4B,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH7B,EAIC,KAAKF,KAAL,CAAWE,SAAX,IAAsB,GAAtB,IAA6B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ9B,EAKC,KAAKF,KAAL,CAAWE,SAAX,IAAsB,GAAtB,IAA8B,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL/B,CADI,CADN,CADF;AAeD;;AArC4C","sourcesContent":["import React, { Component } from \"react\";\r\nimport Data from \"./pages/Data\";\r\nimport DataReact from \"./pages/DataReact\";\r\n//import Test from \"./pages/Test\";\r\nimport Datachart from \"./pages/Datachart\";\r\nimport store from \"../Redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nexport default class Content extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      linkvalue:\"\"\r\n    }\r\n    store.subscribe(() => {\r\n      // When state will be updated(in our case, when items will be fetched), \r\n      // we will update local component state and force component to rerender \r\n      // with new data.\r\n  \r\n      this.setState({\r\n        linkvalue: store.getState().linkvalue\r\n      });\r\n    });\r\n  }\r\n  // componentDidMount(){\r\n  //   this.setState({linkvalue:this.props.linkvalue});\r\n  // }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n            <div>\r\n        <div className=\"content-wrapper\">\r\n        {this.state.linkvalue.map((linkvalue) => <p> {linkvalue.linkvalue} </p> )}\r\n        {this.props.linkvalue}\r\n        {this.props.linkvalue==\"\" && <Datachart />}\r\n        {this.props.linkvalue==\"2\" && <Data />}\r\n        {this.props.linkvalue==\"3\" &&  <DataReact />}\r\n          {/* <Test /> */}\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}