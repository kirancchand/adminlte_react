{"ast":null,"code":"const LOGIN_STATUS = \"LOGIN_STATUS\";\nconst LINK_VALUE = \"LINK_VALUE\";\nconst REGISTER_STATUS = \"REGISTER_STATUS\"; ///function\n\nexport function loginaction(email, password) {\n  return dispatch => {\n    callLoginApi(email, password, status => {\n      if (status === true) {\n        dispatch(setLoginStatus(\"success\", true));\n      } else {\n        dispatch(setLoginStatus(\"Invalid username or password\", false));\n      }\n    });\n  };\n}\nexport function registeraction(user) {\n  return dispatch => {\n    callRegisterApi(user, status => {\n      if (status === true) {\n        dispatch(setRegisterStatus(\"success\", true));\n      } else {\n        dispatch(setRegisterStatus(\"Invalid registration\", false));\n      }\n    });\n  };\n}\nexport function linkaction(linkvalue) {\n  return dispatch => {\n    dispatch(setLinkValue(linkvalue));\n  };\n} //set dispatch\n\nfunction setLoginStatus(status_msg, login_status) {\n  return {\n    type: LOGIN_STATUS,\n    status_msg,\n    login_status\n  };\n}\n\nfunction setRegisterStatus(status_msg, registerstatus) {\n  return {\n    type: REGISTER_STATUS,\n    status_msg,\n    registerstatus\n  };\n}\n\nfunction setLinkValue(linkvalue) {\n  return {\n    type: LINK_VALUE,\n    linkvalue\n  };\n} //api links\n\n\nfunction callLoginApi(email, password, callback) {\n  setTimeout(() => {\n    if (email === \"a@a.com\" && password === \"aa\") {\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  }, 1000);\n}\n\nfunction callRegisterApi(user, callback) {\n  setTimeout(() => {\n    if (user.email === \"a@a.com\" && user.password === \"aa\") {\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  }, 1000);\n}","map":{"version":3,"sources":["/home/kiran/Desktop/work/react/adminlte_react/src/Redux/action.js"],"names":["LOGIN_STATUS","LINK_VALUE","REGISTER_STATUS","loginaction","email","password","dispatch","callLoginApi","status","setLoginStatus","registeraction","user","callRegisterApi","setRegisterStatus","linkaction","linkvalue","setLinkValue","status_msg","login_status","type","registerstatus","callback","setTimeout"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,eAAe,GAAG,iBAAxB,C,CAEA;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,YAAY,CAACH,KAAD,EAAQC,QAAR,EAAkBG,MAAM,IAAI;AACtC,UAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBF,QAAAA,QAAQ,CAACG,cAAc,CAAC,SAAD,EAAY,IAAZ,CAAf,CAAR;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACG,cAAc,CAAC,8BAAD,EAAiC,KAAjC,CAAf,CAAR;AACD;AACF,KANW,CAAZ;AAOD,GARD;AASD;AAED,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,SAAOL,QAAQ,IAAI;AACjBM,IAAAA,eAAe,CAACD,IAAD,EAAOH,MAAM,IAAI;AAC9B,UAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBF,QAAAA,QAAQ,CAACO,iBAAiB,CAAC,SAAD,EAAY,IAAZ,CAAlB,CAAR;AACD,OAFD,MAEO;AACLP,QAAAA,QAAQ,CAACO,iBAAiB,CAAC,sBAAD,EAAyB,KAAzB,CAAlB,CAAR;AACD;AACF,KANc,CAAf;AAOD,GARD;AASD;AAED,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AACpC,SAAOT,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACU,YAAY,CAACD,SAAD,CAAb,CAAR;AACD,GAFD;AAGD,C,CAED;;AACA,SAASN,cAAT,CAAwBQ,UAAxB,EAAoCC,YAApC,EAAkD;AAChD,SAAO;AACLC,IAAAA,IAAI,EAAEnB,YADD;AAELiB,IAAAA,UAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;AACD,SAASL,iBAAT,CAA2BI,UAA3B,EAAuCG,cAAvC,EAAuD;AACrD,SAAO;AACLD,IAAAA,IAAI,EAAEjB,eADD;AAELe,IAAAA,UAFK;AAGLG,IAAAA;AAHK,GAAP;AAKD;;AACD,SAASJ,YAAT,CAAsBD,SAAtB,EAAiC;AAC/B,SAAO;AACLI,IAAAA,IAAI,EAAElB,UADD;AAELc,IAAAA;AAFK,GAAP;AAID,C,CAID;;;AACA,SAASR,YAAT,CAAsBH,KAAtB,EAA6BC,QAA7B,EAAuCgB,QAAvC,EAAiD;AAC/CC,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIlB,KAAK,KAAK,SAAV,IAAuBC,QAAQ,KAAK,IAAxC,EAA8C;AAC5C,aAAOgB,QAAQ,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOA,QAAQ,CAAC,KAAD,CAAf;AACD;AACF,GANS,EAMP,IANO,CAAV;AAOD;;AAED,SAAST,eAAT,CAAyBD,IAAzB,EAA+BU,QAA/B,EAAyC;AACvCC,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIX,IAAI,CAACP,KAAL,KAAe,SAAf,IAA4BO,IAAI,CAACN,QAAL,KAAkB,IAAlD,EAAwD;AACtD,aAAOgB,QAAQ,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOA,QAAQ,CAAC,KAAD,CAAf;AACD;AACF,GANS,EAMP,IANO,CAAV;AAOD","sourcesContent":["const LOGIN_STATUS = \"LOGIN_STATUS\";\nconst LINK_VALUE = \"LINK_VALUE\";\nconst REGISTER_STATUS = \"REGISTER_STATUS\";\n\n///function\nexport function loginaction(email, password) {\n  return dispatch => {\n    callLoginApi(email, password, status => {\n      if (status === true) {\n        dispatch(setLoginStatus(\"success\", true));\n      } else {\n        dispatch(setLoginStatus(\"Invalid username or password\", false));\n      }\n    });\n  };\n}\n\nexport function registeraction(user) {\n  return dispatch => {\n    callRegisterApi(user, status => {\n      if (status === true) {\n        dispatch(setRegisterStatus(\"success\", true));\n      } else {\n        dispatch(setRegisterStatus(\"Invalid registration\", false));\n      }\n    });\n  };\n}\n\nexport function linkaction(linkvalue) {\n  return dispatch => {\n    dispatch(setLinkValue(linkvalue));\n  };\n}\n\n//set dispatch\nfunction setLoginStatus(status_msg, login_status) {\n  return {\n    type: LOGIN_STATUS,\n    status_msg,\n    login_status\n  };\n}\nfunction setRegisterStatus(status_msg, registerstatus) {\n  return {\n    type: REGISTER_STATUS,\n    status_msg,\n    registerstatus\n  };\n}\nfunction setLinkValue(linkvalue) {\n  return {\n    type: LINK_VALUE,\n    linkvalue\n  };\n}\n\n\n\n//api links\nfunction callLoginApi(email, password, callback) {\n  setTimeout(() => {\n    if (email === \"a@a.com\" && password === \"aa\") {\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  }, 1000);\n}\n\nfunction callRegisterApi(user, callback) {\n  setTimeout(() => {\n    if (user.email === \"a@a.com\" && user.password === \"aa\") {\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  }, 1000);\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}